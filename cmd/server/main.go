package main

import (
	"context"
	"net/http"

	"connectrpc.com/connect"
	"connectrpc.com/otelconnect"

	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	// generated by protoc-gen-go
	"github.com/takekazu/golang-azd/pkg/gen/buf/echo/v1/echov1connect" // generated by protoc-gen-connect-go
	otelprovider "github.com/takekazu/golang-azd/pkg/otel/provider"
	"github.com/takekazu/golang-azd/pkg/server/echo"
)

func main() {
	ctx := context.Background()

	shutdown, err := otelprovider.Init(ctx, echov1connect.EchoServiceName)
	defer shutdown()
	if err != nil {
		panic(err)
	}

	server := &echo.EchoServer{}
	mux := http.NewServeMux()
	interceptor, err := otelconnect.NewInterceptor()
	if err != nil {
		panic(err)
	}
	path, handler := echov1connect.NewEchoServiceHandler(
		server,
		connect.WithInterceptors(interceptor),
	)
	mux.Handle(path, handler)

	http.ListenAndServe(
		"localhost:8080",
		// Use h2c so we can serve HTTP/2 without TLS.
		h2c.NewHandler(mux, &http2.Server{}),
	)
}
